// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZkConstruction.Data;

namespace ZkConstruction.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210705061030_TblEmpassignClose")]
    partial class TblEmpassignClose
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ZkConstruction.Models.AccountHead", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HeadName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("AccountHead");
                });

            modelBuilder.Entity("ZkConstruction.Models.Assignchild", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Assignid")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeAcc")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Assignchild");
                });

            modelBuilder.Entity("ZkConstruction.Models.City", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ZkConstruction.Models.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ZkConstruction.Models.Contractor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("ZkConstruction.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ZkConstruction.Models.DEmployee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerHourSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("DEmployee");
                });

            modelBuilder.Entity("ZkConstruction.Models.DailyShedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Projectid")
                        .HasColumnType("int");

                    b.Property<int>("Sheduleid")
                        .HasColumnType("int");

                    b.Property<int>("Siteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("DailyShedule");
                });

            modelBuilder.Entity("ZkConstruction.Models.DailySheduleChild", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Employeeid")
                        .HasColumnType("int");

                    b.Property<int>("Sectionid")
                        .HasColumnType("int");

                    b.Property<int>("Sheduleid")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subsectionid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("DailySheduleChild");
                });

            modelBuilder.Entity("ZkConstruction.Models.Designation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("ZkConstruction.Models.EProject", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Comid")
                        .HasColumnType("int");

                    b.Property<int>("Customerid")
                        .HasColumnType("int");

                    b.Property<string>("Electricity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<string>("Sr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("site")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("EProject");
                });

            modelBuilder.Entity("ZkConstruction.Models.EProjectchild", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<string>("Secid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EPchild");
                });

            modelBuilder.Entity("ZkConstruction.Models.EmpassignClose", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Employeeid")
                        .HasColumnType("int");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmpassignClose");
                });

            modelBuilder.Entity("ZkConstruction.Models.EmployeeAssigned", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Employeeid")
                        .HasColumnType("int");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmployeeAssigned");
                });

            modelBuilder.Entity("ZkConstruction.Models.EmployeeAttendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpCode")
                        .HasColumnType("int");

                    b.Property<string>("Reamark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EmployeeAttendance");
                });

            modelBuilder.Entity("ZkConstruction.Models.FirstLevel", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("AccountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Comid")
                        .HasColumnType("float");

                    b.Property<double>("Headid")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("FirstLevel");
                });

            modelBuilder.Entity("ZkConstruction.Models.Home", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Comid")
                        .HasColumnType("int");

                    b.Property<int>("Customerid")
                        .HasColumnType("int");

                    b.Property<string>("Electricity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlooringHours")
                        .HasColumnType("int");

                    b.Property<string>("FlooringRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaintingHours")
                        .HasColumnType("int");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<int>("RemainingHours")
                        .HasColumnType("int");

                    b.Property<string>("Sr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StdateTimeFlooring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("site")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Home");
                });

            modelBuilder.Entity("ZkConstruction.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ZkConstruction.Models.ProjectAssign", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Assignid")
                        .HasColumnType("int");

                    b.Property<string>("EnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Projectid")
                        .HasColumnType("int");

                    b.Property<string>("Secid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubSecid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProjectAssign");
                });

            modelBuilder.Entity("ZkConstruction.Models.STDDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Invid")
                        .HasColumnType("int");

                    b.Property<int>("Itemid")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("QtyDelievered")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("STDDetail");
                });

            modelBuilder.Entity("ZkConstruction.Models.STDMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateDelivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Invid")
                        .HasColumnType("int");

                    b.Property<int>("ReciverPerson")
                        .HasColumnType("int");

                    b.Property<int>("Siteid")
                        .HasColumnType("int");

                    b.Property<string>("Vtype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("STDMaster");
                });

            modelBuilder.Entity("ZkConstruction.Models.STODetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Invid")
                        .HasColumnType("int");

                    b.Property<int>("Itemid")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("STODetail");
                });

            modelBuilder.Entity("ZkConstruction.Models.STOMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DelieverPerson")
                        .HasColumnType("int");

                    b.Property<decimal>("GTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Invid")
                        .HasColumnType("int");

                    b.Property<string>("RequiredDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Siteid")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vtype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("STOMaster");
                });

            modelBuilder.Entity("ZkConstruction.Models.SecondLevel", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("AccountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Comid")
                        .HasColumnType("float");

                    b.Property<double>("Headid")
                        .HasColumnType("float");

                    b.Property<double>("SubHeadid")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("SecondLevel");
                });

            modelBuilder.Entity("ZkConstruction.Models.Section", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("ZkConstruction.Models.Site", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("ZkConstruction.Models.Sitevisit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Projectid")
                        .HasColumnType("int");

                    b.Property<int>("Siteid")
                        .HasColumnType("int");

                    b.Property<int>("Surveyor")
                        .HasColumnType("int");

                    b.Property<int>("Visitid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Sitevisit");
                });

            modelBuilder.Entity("ZkConstruction.Models.SitevisitImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visitid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SitevisitImage");
                });

            modelBuilder.Entity("ZkConstruction.Models.Subsection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sectionid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SubSection");
                });

            modelBuilder.Entity("ZkConstruction.Models.ThirdLevel", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountNo")
                        .HasColumnType("float");

                    b.Property<string>("AccountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Comid")
                        .HasColumnType("float");

                    b.Property<double>("Cr")
                        .HasColumnType("float");

                    b.Property<double>("Dr")
                        .HasColumnType("float");

                    b.Property<double>("Headid")
                        .HasColumnType("float");

                    b.Property<double>("SecondHeadid")
                        .HasColumnType("float");

                    b.Property<double>("SubHeadid")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("ThirdLevel");
                });

            modelBuilder.Entity("ZkConstruction.Models.UserLogin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("ZkConstruction.Models.Worksheet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccoummodationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellarMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellarNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClearenceModi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClearenceNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CookMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CookNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deatil1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntranceMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntranceNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmToiletMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmToiletNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelCompund")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proid")
                        .HasColumnType("int");

                    b.Property<string>("ProviderOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room1Mod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room1Novi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room2Mod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room2Novi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomBathMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomBathNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SILICONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Siteid")
                        .HasColumnType("int");

                    b.Property<string>("WCMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WCNovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WoodPlinth10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WoodPlinth5")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Worksheet");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
